<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vip.zn.fitness_system.db.mapper.CoachMapper">
    <resultMap id="BaseResultMap" type="com.vip.zn.fitness_system.db.model.Coach">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="coach_id" jdbcType="VARCHAR" property="coachId"/>
        <result column="coach_name" jdbcType="VARCHAR" property="coachName"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, coach_id, coach_name, phone_number, status
    </sql>
    <sql id="coach_id">
        coach_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from coach
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from coach
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.vip.zn.fitness_system.db.model.Coach">
        insert into coach (id, coach_id, coach_name,
                           phone_number, status)
        values (#{id,jdbcType=INTEGER}, #{coachId,jdbcType=VARCHAR}, #{coachName,jdbcType=VARCHAR},
                #{phoneNumber,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.vip.zn.fitness_system.db.model.Coach">
        insert into coach
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="coachId != null">
                coach_id,
            </if>
            <if test="coachName != null">
                coach_name,
            </if>
            <if test="phoneNumber != null">
                phone_number,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="coachId != null">
                #{coachId,jdbcType=VARCHAR},
            </if>
            <if test="coachName != null">
                #{coachName,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.vip.zn.fitness_system.db.model.Coach">
        update coach
        <set>
            <if test="coachId != null">
                coach_id = #{coachId,jdbcType=VARCHAR},
            </if>
            <if test="coachName != null">
                coach_name = #{coachName,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null">
                phone_number = #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.vip.zn.fitness_system.db.model.Coach">
        update coach
        set coach_id     = #{coachId,jdbcType=VARCHAR},
            coach_name   = #{coachName,jdbcType=VARCHAR},
            phone_number = #{phoneNumber,jdbcType=VARCHAR},
            status       = #{status,jdbcType=TINYINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!--  自定义查询语句(根据名字查询用户列表)-->
    <select id="selectByCoachName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from coach
        where `coach_name` = #{coach_name,jdbcType=VARCHAR}
        order by id desc
    </select>
    <!--  自定义查询语句(根据私教id查询用户列表)-->
    <select id="selectByCoachId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from coach
        where `coach_id` = #{coach_name,jdbcType=VARCHAR}
        order by id desc
    </select>
    <!--  自定义查询语句(根据私教电话查询用户列表)-->
    <select id="selectByCoachPhone" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from coach
        where `phone_number` = #{phone_number,jdbcType=VARCHAR}
        order by id desc
    </select>
    <!--  自定义查询语句，根据coachName查询coachId-->
    <select id="selectIdByName" resultMap="BaseResultMap">
        select
        <include refid="coach_id"/>
        from coach
        where `coach_name` = #{coach_name,jdbcType=VARCHAR}
    </select>
</mapper>